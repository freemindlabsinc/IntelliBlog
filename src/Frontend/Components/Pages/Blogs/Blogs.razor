@page "/blogs"
@rendermode InteractiveServer
@inject Frontend.FetchBlogsQuery Query

<PageTitle>My Blogs</PageTitle>

@if (blogs == null)
{
    <p><em>Loading Blogs...</em></p>
}
else
{
    <FluentStack Style="margin-bottom: 20px;">
        <FluentNumberField @bind-Value="_max" Label="Max Blogs" />
        <FluentButton OnClick="@FetchData" >Refresh</FluentButton>
    </FluentStack>
   
    <div>
    <FluentSwitch Style="width: 150px;" @bind-Value="ShowHeader">Header</FluentSwitch>
    <FluentSwitch Style="width: 150px;" @bind-Value="ShowNavMenu">NavMenu</FluentSwitch>
    <FluentSwitch Style="width: 150px;" @bind-Value="ShowBodyContent">BodyContent</FluentSwitch>
    <FluentSwitch Style="width: 150px;" @bind-Value="ShowFooter">Footer</FluentSwitch>
    </div>

    @foreach (var a in blogs!)
    {
        <FluentCard Height="Auto" Style="margin-top: 10px;">
            <FluentLayout>
                @if (ShowHeader)
                {
                    <FluentHeader>
                        <!-- Some Header Text -->
                        <FluentBadge Appearance="Appearance.Neutral">@a.Name</FluentBadge>
                    
                        <FluentBadge Appearance="Appearance.Lightweight">@(a.Description ?? "this is a description")</FluentBadge>
                        <FluentSpacer />

                        <!--  Aligned to the end -->
                        <FluentBadge Appearance="Appearance.Lightweight" Style="color: gray">@a.Id</FluentBadge>

                    </FluentHeader>
                }

                <FluentStack Orientation="Orientation.Horizontal" Width="100%">
                @if (ShowNavMenu)
               {                        

                    <FluentNavMenu Width="250">
                       <img src="@a.Image" alt="xxx" height="160px" width="240px" />

                       <!--FluentNavLink Icon="@(new Icons.Regular.Size24.Home())">Item 1</!--FluentNavLink>
                        <FluentNavLink Icon="@(new Icons.Regular.Size24.Cloud())">Item 2</FluentNavLink>
                        <FluentNavGroup-- Title="Item 3">
                            <FluentNavLink Icon="@(new Icons.Regular.Size24.LeafOne())">Item 3.1</FluentNavLink>
                            <FluentNavLink Icon="@(new Icons.Regular.Size24.LeafTwo())">Item 3.2</FluentNavLink>
                        </FluentNavGroup-->
                        @* <FluentNavLink Icon="@(new Icons.Regular.Size24.CalendarAgenda())" Disabled="false">Item 4</FluentNavLink> *@
                    </FluentNavMenu>

                        
                }

                @if (ShowBodyContent)
                {
                    <FluentBodyContent Style="max-height:200px">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce quis lorem lacus.
                        Ut id leo non enim feugiat ultrices. Proin vulputate volutpat urna nec iaculis.
                        Integer dui lacus, fermentum sit amet aliquet in, scelerisque vitae dui.
                        Nulla fringilla sagittis orci eu consectetur. Fusce eget dolor non lectus placerat
                        tincidunt. Pellentesque aliquam non odio ac porttitor. Nam finibus mattis sagittis.
                        Ut hendrerit porttitor massa in aliquam. Duis laoreet fringilla feugiat.
                        Sed maximus, urna in fringilla posuere, enim urna bibendum justo, vel molestie nibh orci nec lectus.
                        Etiam a varius justo. Aenean nisl ante, interdum eget vulputate eget, iaculis ut massa.
                        Suspendisse maximus sed purus id molestie. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                    </FluentBodyContent>
                }
                </FluentStack>

                @if (ShowFooter)
                {
                    <FluentFooter Style="@("height: 40px; color: white; text-align: center")">
                        <FluentLabel>
                            This blog has [X] article(s) and some other data: [Y], [Z]
                        </FluentLabel>                        
                    </FluentFooter>
                }
            </FluentLayout>
        </FluentCard>
    }    
}

<p>This component demonstrates showing data.</p>

@code {
    //string manual_url = "https://i.ytimg.com/vi/3H_-Mjq9OsA/maxresdefault.jpg";
    bool ShowHeader = true;
    bool ShowNavMenu = true;
    bool ShowBodyContent = true;
    bool ShowFooter = true;

    IEnumerable<Frontend.IFetchBlogs_Blogs_Nodes> blogs = default!;
    int _max = 3;

    protected override async Task OnInitializedAsync()
    {
        await FetchData();
    }

    public async Task FetchData()
    {
        var first = _max;
        string? after = null;
        BlogSortInput[]? order = null;
        BlogFilterInput? filter = null;

        IOperationResult<IFetchBlogsResult> response = await Query.ExecuteAsync(
            first, after, filter, order, default);
        response.EnsureNoErrors();

        var results = response.Data!.Blogs!;
        var nodes = results.Nodes!;
                
        this.blogs = nodes;        
    }
}