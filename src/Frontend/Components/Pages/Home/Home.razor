@page "/"
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<h1>Welcome to IntelliBlog!</h1>

<p>
    IntelliBlog is a blog platform that allows you to create and manage your own blog with the help of your private AI assistant.
</p>

<p>
    You can create posts, manage content sources, and much more!
</p>


@if (Model is not null)
{
    <!-- The latest posts -->
    <FluentStack> 
        <FluentLabel Typo="Typography.H3">Latest Posts</FluentLabel>
        <FluentNumberField Label="Max" @bind-Value="MaxPosts" @bind-Value:after="FetchData" />        
    </FluentStack>
    <FluentHorizontalScroll class="full-width" Speed="1200" Easing=ScrollEasing.EaseInOut>

        @foreach (var post in Model.LatestPosts!.Nodes!)
        {
            <div style="height:300px;">
                <PostCard Post="post" />
            </div>
        }

    </FluentHorizontalScroll>

    <FluentDivider />

    <!-- The latest sources -->    
    <div>
        <FluentLabel Typo="Typography.H3">Latest Sources</FluentLabel>
        <FluentNumberField Label="Max" @bind-Value="@MaxSources" @bind-Value:after="FetchData" />
    </div>
    <FluentHorizontalScroll class="full-width" Speed="600" Easing=ScrollEasing.EaseInOut>
        
        @foreach (var source in Model.LatestSources!.Nodes!)
        {
            <div style="height:250px;">
                <SourceCard Source="source" />
            </div>
        }

    </FluentHorizontalScroll>
}

@code {
    [Inject]
    BloggingClient BloggingClient { get; set; } = default!;

    IHomeQueryResult Model { get; set; } = default!;

    int MaxPosts { get; set; } = 5;
    int MaxSources { get; set; } = 5;

    protected override async Task OnInitializedAsync()
    {
        await FetchData();
    }

    async Task FetchData()
    { 
        var response = await BloggingClient.HomeQuery.ExecuteAsync(
            maxPosts: MaxPosts,
            maxSources: MaxSources
        );
        response.EnsureNoErrors();

        Model = response.Data!;

        StateHasChanged();
    }
}