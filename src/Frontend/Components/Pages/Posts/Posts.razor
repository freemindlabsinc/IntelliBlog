@page "/posts"
@rendermode InteractiveServer

<PageTitle>My Posts Now</PageTitle>

@if (posts == null)
{
    <p><em>Loading Posts...</em></p>
}
else
{
    <FluentStack Style="margin-bottom: 20px;">
        <FluentNumberField @bind-Value="_maxArticles" Label="Max Posts" />
        <FluentButton OnClick="@FetchData">Refresh</FluentButton>
    </FluentStack>
    
   <FluentStack Wrap="true">
 
   @foreach (var post in posts!)
   {                
        <PostCard Post="post" />
       
   }
    </FluentStack>
}

<p>This component demonstrates showing data.</p>

@code {    
    [Inject]
    public FetchPostsQuery Query { get; set; } = default!;

    IEnumerable<Frontend.IFetchPosts_Posts_Nodes> posts = default!;
    int _maxArticles = 30;

    protected override async Task OnInitializedAsync()
    {
        await FetchData();
    }

    public async Task FetchData()
    {
        var res = await Query.ExecuteAsync(_maxArticles);

        this.posts = res!.Data!.Posts!.Nodes!;    
    }
}